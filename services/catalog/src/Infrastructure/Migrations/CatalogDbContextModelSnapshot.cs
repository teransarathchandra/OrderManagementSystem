// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1d2aac20-7887-4fd2-9327-c637e88676cd"),
                            Description = "Electronic gadgets and devices",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = new Guid("06410596-67dd-4cb1-9bc3-2ac75688cd59"),
                            Description = "Books and literature",
                            Name = "Books"
                        },
                        new
                        {
                            Id = new Guid("d794d57d-7d26-4303-a528-3f1fbfd55947"),
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AvailableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("88195839-6d90-4a13-9d99-435ddd95f9f6"),
                            AvailableQuantity = 50,
                            CategoryId = new Guid("1d2aac20-7887-4fd2-9327-c637e88676cd"),
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 699.99m
                        },
                        new
                        {
                            Id = new Guid("8ffa522c-f63d-46e5-a33c-199d733ce9e9"),
                            AvailableQuantity = 30,
                            CategoryId = new Guid("1d2aac20-7887-4fd2-9327-c637e88676cd"),
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 999.99m
                        },
                        new
                        {
                            Id = new Guid("cdb43089-8946-405b-9f16-dac300dda55f"),
                            AvailableQuantity = 100,
                            CategoryId = new Guid("06410596-67dd-4cb1-9bc3-2ac75688cd59"),
                            Description = "Best-selling fiction book",
                            Name = "Fiction Novel",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = new Guid("554620cf-426f-431b-bf6c-49dcb6337e73"),
                            AvailableQuantity = 200,
                            CategoryId = new Guid("d794d57d-7d26-4303-a528-3f1fbfd55947"),
                            Description = "Comfortable cotton t-shirt",
                            Name = "T-Shirt",
                            Price = 14.99m
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
